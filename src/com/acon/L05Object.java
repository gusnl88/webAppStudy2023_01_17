package com.acon;

public class L05Object {
    public L05Object(int a, Object o){
        //생성자 함수와 비슷하지만 클래스명으로 작성
        this.a =0;
//        this.o=o;
    }
    int a; //this.a 로 접근할 수 있는 해당 객체의 필드다.
    public void print(){
        System.out.println(this.a);
    }//this.print -필드

    static int b; //L05Object.b  정적멤버는 클래스의 이름만 사용
    //변수 : 데이터(기본형+자료형)을 할당(참조)하는 것
    //상수 : 최초에 참조한 데이터가 바뀌지 않는 것.
    //지역변수 : 전역이 아닌 스코프에 (메소드,제어문,반복문과 같은 블럭{}) 존재하는 변수 (해당 블럭 내에서만 참조가능한 변수)
    //전역변수: 해달 타입이(class) 객체가 되었을 때 재원(필드,속성)이 되는것.
    //매개변수(파라미터) : 생성자나 메소드를 실행할떄

    //메모리 영역
    //힙: 인스턴스 객체가 생성되는 곳 (java 가 유명하게 된 이유) (포인터를 사라지게함),
    //가비지컬렉션(GC)이 사용하지 않는 객체를 자동으로 지운다.
    //스텍 (call Stack) : 작업(main에 작성한 코드)에 필요한 메모리 공간으로(메소드 단위) 스택에 스케줄링한다.
    //메소드:JVM 이 실행되면서 사용되는 class 를 분석해서 메소드 영역에 저장하는데 이때 static으로 선언된 정적 멤버를 생성한다.

    //static 과 정적 멤버
    //최초에 메소드 영역에 생성되고 어디서든 참조 가능하고 자동 삭제되지 않고 남는다.
    //주의 : 너무 많이 선언하면 안됨, 초기화를 하지 않기 때문에 기대했던 값이 아닐 수 있다????(상수로 선언되는 편)
    public static void main(String[] args) {//L05Object 의 필드가 아니기 때문에 this 를 사용할 수 없다.
        //main 함수 정적멤버기 떄문에 (L05Object 의 필드가 아니기 떄문에) this 를 사용할 수 없다.

        int i = 0;//기본형 타입은 class가 아니다
        //class,자료형 타입,타입, 객체의 타입
        //필드(Field),속성(Attribute),멤버 //전체영역에 선언된 것들 (최상위) static 제외(정적멤버)
        //객체(오브젝트(Object))인스턴스//new 연산자로 해당 클래스의 생성자를 호출했을때 반환하는 것.
        //this : 필드 접근자(해당 클레스가 객체가 되었을 때)
        // class Object : 개발자가 타입을 명시하고 객체를 생성할 수 있도록하는 최초의 설계,모든 타입의 부모, 조상

        //메소드 : 재사용할 실행의 집합 (매개변수와 반환값으로 문장을 완성하세요!)
        //생성자 : 객체 생성시 호출되는 생성자는 매개변수 필드를 초기화(첫세팅)할 수 있다.(객체를 생성할때 호출되고 필드를 초기화한다.)
        //         (new 연산자가 객체를 생성)
    }
}
